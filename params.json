{
  "name": "Android UML Generator",
  "tagline": "Generate a sequence diagram based upon the usage of an Android Application Members: Miles Peele, Tristan Vernon, Jake Shor, Tim Fulton",
  "body": "### Purpose\r\nExecution flows of applications can sometimes be difficult to visualize without having UML\r\ndiagrams. In particular, sequence diagrams allow for the capture of flow logic, logic\r\nmethods, usage program, and logic of services of a program. \r\n\r\nThe goal of this project is to automatically generate sequence diagrams based on the usage of an application. We also generate an XMI file so that the UML diagram can be imported into StarUML.\r\n\r\n### Video Demonstration (Click to be redirected to youtube)\r\n[![Click here to be directed to the video!](http://img.youtube.com/vi/QTSzW8bSpdY/0.jpg)](https://www.youtube.com/watch?v=QTSzW8bSpdY \"Android UML Generator Demo\")\r\n\r\n### Workflow Overview\r\n![](https://github.com/UMLGenerator/Android-UML-Generator/blob/master/artifacts/ApplicationStructure.png?raw=true)\r\n\r\nAfter starting the GUI application (Monitor), the user selects an app they wish to track. Upon picking the application, the Xposed module hooks into all the methods of the selected application. At this point we can tell whenever a method is called. After 'hooking' all methods the host application is launched. At this point we begin tracking whenever each method is called. When a method is used, we write the neccisary information about that method in two files. One is in a specific plantUML format the other is in a specific XMI file format. Every method call is tracked and recorded in order, until the user chooses to stop tracking. At this point the user inputs an email, and the XMI file and plantUML file are sent to the backend. On the backend, we first run the plantUML.jar, to convert the .txt file to a .png of the sequence diagram. With the .png, we then put it and the XMI file into a directory, zip it up, and email it to the user. We choose to email to the user because a cellular screen is incredibly hard to read all the information from such a large diagram.\r\n\r\n### Installing and Using Android UML Generator\r\n\r\nInstallation is the hardest part of using our Android UML Generator. Following these steps will allow anyone to install our Application:\r\n\r\n1. Install Xposed onto your phone, follow the link below. With the provided apk file install it on your phone. \r\n2. Launch the application and follow the instructions to install Xposed onto your phone (must have root access).\r\n3. Using our provided code, install our application (Monitor) onto your phone\r\n4. Open up the Xposed application again, and navigate to 'modules'. Click the Monitor module, it will ask you to soft reboot your phone. Once the reboot is done, you are ready to begin.\r\n5. To set up the backend for Android UML Generator install Flask onto the server of choice (follow the link below).\r\n6. Next download the backend [here](https://github.com/UMLGenerator/UMLServer)\r\n7. Navigate to the directory you installed it on and run `python3 serverMain.py`\r\n8. On your device, launch the application and you are done!\r\n9. Follow the video above for a more in depth guide on how to actually use the application \r\n\r\n### Tools Used\r\n* [Xposed](http://repo.xposed.info/module/de.robv.android.xposed.installer)\r\n     Module used to gather data about which methods and classes are used my an application\r\n* [PlantUML](http://plantuml.com/)\r\n     Program used to take text file and turn it into a UML sequence diagram\r\n* [StarUML](http://staruml.io/)\r\n     Program that XMI can be imported into for modification of sequence diagram\r\n* [SimpleXML](http://simple.sourceforge.net/)\r\n     Framework used to make the process of writing XMI easier\r\n* [Flask](http://flask.pocoo.org/)\r\n     Framework used to run backend\r\n\r\n### Authors and Contributors\r\nMiles Peele (@mformetal)\r\nTristan Vernon (@Caedus13)\r\nJake Shor (@JakeShor)\r\nTim Fulton (@tmfulton)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}